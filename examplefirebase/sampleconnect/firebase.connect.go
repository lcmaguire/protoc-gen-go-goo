// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: firebase.proto

package sampleconnect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	sample "github.com/lcmaguire/protoc-gen-go-goo/examplefirebase/sample"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// ExampleServiceName is the fully-qualified name of the ExampleService service.
	ExampleServiceName = "tutorial.ExampleService"
)

// ExampleServiceClient is a client for the tutorial.ExampleService service.
type ExampleServiceClient interface {
	CreateExample(context.Context, *connect_go.Request[sample.Example]) (*connect_go.Response[sample.Example], error)
	GetExample(context.Context, *connect_go.Request[sample.GetExampleRequest]) (*connect_go.Response[sample.Example], error)
	ListExamples(context.Context, *connect_go.Request[sample.ListExampleRequest]) (*connect_go.Response[sample.ListExampleResponse], error)
	UpdateExample(context.Context, *connect_go.Request[sample.Example]) (*connect_go.Response[sample.Example], error)
	DeleteExample(context.Context, *connect_go.Request[sample.DeleteExampleRequest]) (*connect_go.Response[emptypb.Empty], error)
}

// NewExampleServiceClient constructs a client for the tutorial.ExampleService service. By default,
// it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses, and
// sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC()
// or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewExampleServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) ExampleServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &exampleServiceClient{
		createExample: connect_go.NewClient[sample.Example, sample.Example](
			httpClient,
			baseURL+"/tutorial.ExampleService/CreateExample",
			opts...,
		),
		getExample: connect_go.NewClient[sample.GetExampleRequest, sample.Example](
			httpClient,
			baseURL+"/tutorial.ExampleService/GetExample",
			opts...,
		),
		listExamples: connect_go.NewClient[sample.ListExampleRequest, sample.ListExampleResponse](
			httpClient,
			baseURL+"/tutorial.ExampleService/ListExamples",
			opts...,
		),
		updateExample: connect_go.NewClient[sample.Example, sample.Example](
			httpClient,
			baseURL+"/tutorial.ExampleService/UpdateExample",
			opts...,
		),
		deleteExample: connect_go.NewClient[sample.DeleteExampleRequest, emptypb.Empty](
			httpClient,
			baseURL+"/tutorial.ExampleService/DeleteExample",
			opts...,
		),
	}
}

// exampleServiceClient implements ExampleServiceClient.
type exampleServiceClient struct {
	createExample *connect_go.Client[sample.Example, sample.Example]
	getExample    *connect_go.Client[sample.GetExampleRequest, sample.Example]
	listExamples  *connect_go.Client[sample.ListExampleRequest, sample.ListExampleResponse]
	updateExample *connect_go.Client[sample.Example, sample.Example]
	deleteExample *connect_go.Client[sample.DeleteExampleRequest, emptypb.Empty]
}

// CreateExample calls tutorial.ExampleService.CreateExample.
func (c *exampleServiceClient) CreateExample(ctx context.Context, req *connect_go.Request[sample.Example]) (*connect_go.Response[sample.Example], error) {
	return c.createExample.CallUnary(ctx, req)
}

// GetExample calls tutorial.ExampleService.GetExample.
func (c *exampleServiceClient) GetExample(ctx context.Context, req *connect_go.Request[sample.GetExampleRequest]) (*connect_go.Response[sample.Example], error) {
	return c.getExample.CallUnary(ctx, req)
}

// ListExamples calls tutorial.ExampleService.ListExamples.
func (c *exampleServiceClient) ListExamples(ctx context.Context, req *connect_go.Request[sample.ListExampleRequest]) (*connect_go.Response[sample.ListExampleResponse], error) {
	return c.listExamples.CallUnary(ctx, req)
}

// UpdateExample calls tutorial.ExampleService.UpdateExample.
func (c *exampleServiceClient) UpdateExample(ctx context.Context, req *connect_go.Request[sample.Example]) (*connect_go.Response[sample.Example], error) {
	return c.updateExample.CallUnary(ctx, req)
}

// DeleteExample calls tutorial.ExampleService.DeleteExample.
func (c *exampleServiceClient) DeleteExample(ctx context.Context, req *connect_go.Request[sample.DeleteExampleRequest]) (*connect_go.Response[emptypb.Empty], error) {
	return c.deleteExample.CallUnary(ctx, req)
}

// ExampleServiceHandler is an implementation of the tutorial.ExampleService service.
type ExampleServiceHandler interface {
	CreateExample(context.Context, *connect_go.Request[sample.Example]) (*connect_go.Response[sample.Example], error)
	GetExample(context.Context, *connect_go.Request[sample.GetExampleRequest]) (*connect_go.Response[sample.Example], error)
	ListExamples(context.Context, *connect_go.Request[sample.ListExampleRequest]) (*connect_go.Response[sample.ListExampleResponse], error)
	UpdateExample(context.Context, *connect_go.Request[sample.Example]) (*connect_go.Response[sample.Example], error)
	DeleteExample(context.Context, *connect_go.Request[sample.DeleteExampleRequest]) (*connect_go.Response[emptypb.Empty], error)
}

// NewExampleServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewExampleServiceHandler(svc ExampleServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	mux := http.NewServeMux()
	mux.Handle("/tutorial.ExampleService/CreateExample", connect_go.NewUnaryHandler(
		"/tutorial.ExampleService/CreateExample",
		svc.CreateExample,
		opts...,
	))
	mux.Handle("/tutorial.ExampleService/GetExample", connect_go.NewUnaryHandler(
		"/tutorial.ExampleService/GetExample",
		svc.GetExample,
		opts...,
	))
	mux.Handle("/tutorial.ExampleService/ListExamples", connect_go.NewUnaryHandler(
		"/tutorial.ExampleService/ListExamples",
		svc.ListExamples,
		opts...,
	))
	mux.Handle("/tutorial.ExampleService/UpdateExample", connect_go.NewUnaryHandler(
		"/tutorial.ExampleService/UpdateExample",
		svc.UpdateExample,
		opts...,
	))
	mux.Handle("/tutorial.ExampleService/DeleteExample", connect_go.NewUnaryHandler(
		"/tutorial.ExampleService/DeleteExample",
		svc.DeleteExample,
		opts...,
	))
	return "/tutorial.ExampleService/", mux
}

// UnimplementedExampleServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedExampleServiceHandler struct{}

func (UnimplementedExampleServiceHandler) CreateExample(context.Context, *connect_go.Request[sample.Example]) (*connect_go.Response[sample.Example], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("tutorial.ExampleService.CreateExample is not implemented"))
}

func (UnimplementedExampleServiceHandler) GetExample(context.Context, *connect_go.Request[sample.GetExampleRequest]) (*connect_go.Response[sample.Example], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("tutorial.ExampleService.GetExample is not implemented"))
}

func (UnimplementedExampleServiceHandler) ListExamples(context.Context, *connect_go.Request[sample.ListExampleRequest]) (*connect_go.Response[sample.ListExampleResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("tutorial.ExampleService.ListExamples is not implemented"))
}

func (UnimplementedExampleServiceHandler) UpdateExample(context.Context, *connect_go.Request[sample.Example]) (*connect_go.Response[sample.Example], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("tutorial.ExampleService.UpdateExample is not implemented"))
}

func (UnimplementedExampleServiceHandler) DeleteExample(context.Context, *connect_go.Request[sample.DeleteExampleRequest]) (*connect_go.Response[emptypb.Empty], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("tutorial.ExampleService.DeleteExample is not implemented"))
}
